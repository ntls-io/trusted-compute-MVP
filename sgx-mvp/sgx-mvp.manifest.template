# Rust manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ self_exe }}"
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}"

# See https://gramine.readthedocs.io/en/stable/performance.html#glibc-malloc-tuning
loader.env.MALLOC_ARENA_MAX = "1"

# For easier debugging â€” not strictly required to run this workload
loader.env.RUST_BACKTRACE = "full"

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
]

sgx.debug = true
sgx.enclave_size = "4G"   # Increase enclave size to 4GB

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ self_exe }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:test-data/1_test_data.json",
  "file:test-data/1_test_schema.json",
  "file:bin/get_mean_wasm.wasm",
  "file:bin/get_median_wasm.wasm",
  "file:bin/get_sd_wasm.wasm"
]

# The maximum number of threads in a single process needs to be declared in advance.
#   https://gramine.readthedocs.io/en/stable/manifest-syntax.html#number-of-threads
sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '8' }}
